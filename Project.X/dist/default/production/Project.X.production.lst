

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Jan 01 23:13:43 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 18/08/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4520 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     _ADCON0bits	set	4034
    60   000000                     _LATC	set	3979
    61   000000                     _INTCONbits	set	4082
    62   000000                     _TRISA	set	3986
    63   000000                     _PIR1bits	set	3998
    64   000000                     _ADCON2bits	set	4032
    65   000000                     _ADCON1bits	set	4033
    66   000000                     _ADRESL	set	4035
    67   000000                     _RCONbits	set	4048
    68   000000                     _OSCCONbits	set	4051
    69   000000                     _T0CONbits	set	4053
    70   000000                     _INTCON2bits	set	4081
    71   000000                     _PIE1bits	set	3997
    72   000000                     _TRISC	set	3988
    73   000000                     _TRISB	set	3987
    74                           
    75                           ; #config settings
    76                           
    77                           	psect	cinit
    78   00085C                     __pcinit:
    79                           	callstack 0
    80   00085C                     start_initialization:
    81                           	callstack 0
    82   00085C                     __initialization:
    83                           	callstack 0
    84                           
    85                           ; Clear objects allocated to COMRAM (2 bytes)
    86   00085C  6A0F               	clrf	(__pbssCOMRAM+1)& (0+255),c
    87   00085E  6A0E               	clrf	__pbssCOMRAM& (0+255),c
    88   000860                     end_of_initialization:
    89                           	callstack 0
    90   000860                     __end_of__initialization:
    91                           	callstack 0
    92   000860  9010               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    93   000862  9210               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    94   000864  0E00               	movlw	low (__Lmediumconst shr (0+16))
    95   000866  6EF8               	movwf	tblptru,c
    96   000868  0100               	movlb	0
    97   00086A  EF24  F004         	goto	_main	;jump to C main() function
    98                           
    99                           	psect	bssCOMRAM
   100   00000E                     __pbssCOMRAM:
   101                           	callstack 0
   102   00000E                     _State:
   103                           	callstack 0
   104   00000E                     	ds	2
   105                           
   106                           	psect	cstackCOMRAM
   107   000001                     __pcstackCOMRAM:
   108                           	callstack 0
   109   000001                     ?___awdiv:
   110                           	callstack 0
   111   000001                     ___awdiv@dividend:
   112                           	callstack 0
   113                           
   114                           ; 2 bytes @ 0x0
   115   000001                     	ds	2
   116   000003                     ___awdiv@divisor:
   117                           	callstack 0
   118                           
   119                           ; 2 bytes @ 0x2
   120   000003                     	ds	2
   121   000005                     ___awdiv@counter:
   122                           	callstack 0
   123                           
   124                           ; 1 bytes @ 0x4
   125   000005                     	ds	1
   126   000006                     ___awdiv@sign:
   127                           	callstack 0
   128                           
   129                           ; 1 bytes @ 0x5
   130   000006                     	ds	1
   131   000007                     ___awdiv@quotient:
   132                           	callstack 0
   133                           
   134                           ; 2 bytes @ 0x6
   135   000007                     	ds	2
   136   000009                     ??_H_ISR:
   137                           
   138                           ; 1 bytes @ 0x8
   139   000009                     	ds	2
   140   00000B                     H_ISR@Lvalue:
   141                           	callstack 0
   142                           
   143                           ; 2 bytes @ 0xA
   144   00000B                     	ds	2
   145   00000D                     ??_Lo_ISR:
   146                           
   147                           ; 1 bytes @ 0xC
   148   00000D                     	ds	1
   149   00000E                     
   150                           ; 1 bytes @ 0xD
   151 ;;
   152 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   153 ;;
   154 ;; *************** function _main *****************
   155 ;; Defined at:
   156 ;;		line 46 in file "Main.c"
   157 ;; Parameters:    Size  Location     Type
   158 ;;		None
   159 ;; Auto vars:     Size  Location     Type
   160 ;;		None
   161 ;; Return value:  Size  Location     Type
   162 ;;                  1    wreg      void 
   163 ;; Registers used:
   164 ;;		wreg, status,2, cstack
   165 ;; Tracked objects:
   166 ;;		On entry : 0/0
   167 ;;		On exit  : 0/0
   168 ;;		Unchanged: 0/0
   169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   170 ;;      Params:         0       0       0       0       0       0       0
   171 ;;      Locals:         0       0       0       0       0       0       0
   172 ;;      Temps:          0       0       0       0       0       0       0
   173 ;;      Totals:         0       0       0       0       0       0       0
   174 ;;Total ram usage:        0 bytes
   175 ;; Hardware stack levels required when called: 4
   176 ;; This function calls:
   177 ;;		_System_Init
   178 ;; This function is called by:
   179 ;;		Startup code after reset
   180 ;; This function uses a non-reentrant model
   181 ;;
   182                           
   183                           	psect	text0
   184   000848                     __ptext0:
   185                           	callstack 0
   186   000848                     _main:
   187                           	callstack 27
   188   000848                     
   189                           ;Main.c: 47:     System_Init();
   190   000848  ECD6  F003         	call	_System_Init	;wreg free
   191   00084C                     
   192                           ;Main.c: 48:     State = 0;
   193   00084C  0E00               	movlw	0
   194   00084E  6E0F               	movwf	(_State+1)^0,c
   195   000850  0E00               	movlw	0
   196   000852  6E0E               	movwf	_State^0,c
   197   000854                     l45:
   198   000854  EF2A  F004         	goto	l45
   199   000858  EF13  F000         	goto	start
   200   00085C                     __end_of_main:
   201                           	callstack 0
   202                           
   203 ;; *************** function _System_Init *****************
   204 ;; Defined at:
   205 ;;		line 13 in file "Setting.c"
   206 ;; Parameters:    Size  Location     Type
   207 ;;		None
   208 ;; Auto vars:     Size  Location     Type
   209 ;;		None
   210 ;; Return value:  Size  Location     Type
   211 ;;                  1    wreg      void 
   212 ;; Registers used:
   213 ;;		wreg, status,2
   214 ;; Tracked objects:
   215 ;;		On entry : 0/0
   216 ;;		On exit  : 0/0
   217 ;;		Unchanged: 0/0
   218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   219 ;;      Params:         0       0       0       0       0       0       0
   220 ;;      Locals:         0       0       0       0       0       0       0
   221 ;;      Temps:          0       0       0       0       0       0       0
   222 ;;      Totals:         0       0       0       0       0       0       0
   223 ;;Total ram usage:        0 bytes
   224 ;; Hardware stack levels used: 1
   225 ;; Hardware stack levels required when called: 3
   226 ;; This function calls:
   227 ;;		Nothing
   228 ;; This function is called by:
   229 ;;		_main
   230 ;; This function uses a non-reentrant model
   231 ;;
   232                           
   233                           	psect	text1
   234   0007AC                     __ptext1:
   235                           	callstack 0
   236   0007AC                     _System_Init:
   237                           	callstack 27
   238   0007AC                     
   239                           ;Setting.c: 14:     ADCON1bits.PCFG = 0b1101;
   240   0007AC  50D3               	movf	211,w,c	;volatile
   241   0007AE  0B8F               	andlw	-113
   242   0007B0  0940               	iorlw	64
   243   0007B2  6ED3               	movwf	211,c	;volatile
   244                           
   245                           ;Setting.c: 15:     ADCON1bits.VCFG0 = 0;
   246   0007B4  0E03               	movlw	3
   247   0007B6  6E92               	movwf	146,c	;volatile
   248                           
   249                           ;Setting.c: 16:     ADCON1bits.VCFG1 = 0;
   250   0007B8  0E01               	movlw	1
   251   0007BA  6E93               	movwf	147,c	;volatile
   252                           
   253                           ;Setting.c: 17:     ADCON2bits.ADFM = 0;
   254   0007BC  0E00               	movlw	0
   255   0007BE  6E94               	movwf	148,c	;volatile
   256                           
   257                           ;Setting.c: 18:     ADCON2bits.ADCS = 0b000;
   258   0007C0  0E00               	movlw	0
   259   0007C2  6E8B               	movwf	139,c	;volatile
   260   0007C4                     
   261                           ;Setting.c: 20:     ADCON0bits.ADON = 1;
   262   0007C4  9ED0               	bcf	208,7,c	;volatile
   263   0007C6                     
   264                           ;Setting.c: 21: 
   265   0007C6  8C9D               	bsf	157,6,c	;volatile
   266   0007C8                     
   267                           ;Setting.c: 22:     INTCONbits.TMR0IE = 1;
   268   0007C8  9C9E               	bcf	158,6,c	;volatile
   269   0007CA                     
   270                           ;Setting.c: 23:     INTCONbits.TMR0IF = 0;
   271   0007CA  92F2               	bcf	242,1,c	;volatile
   272   0007CC                     
   273                           ;Setting.c: 24:     INTCON2bits.TMR0IP = 1;
   274   0007CC  8CF2               	bsf	242,6,c	;volatile
   275   0007CE                     
   276                           ;Setting.c: 25:     T0CONbits.T08BIT = 0;
   277   0007CE  8EF2               	bsf	242,7,c	;volatile
   278                           
   279                           ;Setting.c: 27: }
   280   0007D0  50C1               	movf	193,w,c	;volatile
   281   0007D2  0BF0               	andlw	-16
   282   0007D4  090D               	iorlw	13
   283   0007D6  6EC1               	movwf	193,c	;volatile
   284   0007D8                     
   285                           ;Setting.c: 28: 
   286   0007D8  98C1               	bcf	193,4,c	;volatile
   287   0007DA                     
   288                           ;Setting.c: 29: void Mode_1_Setting(void){
   289   0007DA  9AC1               	bcf	193,5,c	;volatile
   290   0007DC                     
   291                           ;Setting.c: 30:     ADCON0bits.CHS = 0;
   292   0007DC  9EC0               	bcf	192,7,c	;volatile
   293                           
   294                           ;Setting.c: 31:     ADCON0bits.GO = 1;
   295   0007DE  0EF8               	movlw	-8
   296   0007E0  16C0               	andwf	192,f,c	;volatile
   297                           
   298                           ;Setting.c: 32: }
   299   0007E2  50C0               	movf	192,w,c	;volatile
   300   0007E4  0BC7               	andlw	-57
   301   0007E6  0908               	iorlw	8
   302   0007E8  6EC0               	movwf	192,c	;volatile
   303   0007EA                     
   304                           ;Setting.c: 33: 
   305   0007EA  80C2               	bsf	194,0,c	;volatile
   306   0007EC                     
   307                           ;Setting.c: 35:     ADCON0bits.CHS = 1;
   308   0007EC  8AF2               	bsf	242,5,c	;volatile
   309   0007EE                     
   310                           ;Setting.c: 36:     ADCON0bits.GO = 1;
   311   0007EE  94F2               	bcf	242,2,c	;volatile
   312   0007F0                     
   313                           ;Setting.c: 37: }
   314   0007F0  84F1               	bsf	241,2,c	;volatile
   315   0007F2                     
   316                           ;Setting.c: 38: 
   317   0007F2  9CD5               	bcf	213,6,c	;volatile
   318                           
   319                           ;Setting.c: 39: void Mode_3_Setting(void){
   320   0007F4  0EF8               	movlw	-8
   321   0007F6  16D5               	andwf	213,f,c	;volatile
   322   0007F8  0012               	return		;funcret
   323   0007FA                     __end_of_System_Init:
   324                           	callstack 0
   325                           
   326 ;; *************** function _Lo_ISR *****************
   327 ;; Defined at:
   328 ;;		line 42 in file "Main.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;		None
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		None
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   342 ;;      Params:         0       0       0       0       0       0       0
   343 ;;      Locals:         0       0       0       0       0       0       0
   344 ;;      Temps:          1       0       0       0       0       0       0
   345 ;;      Totals:         1       0       0       0       0       0       0
   346 ;;Total ram usage:        1 bytes
   347 ;; Hardware stack levels used: 1
   348 ;; Hardware stack levels required when called: 2
   349 ;; This function calls:
   350 ;;		Nothing
   351 ;; This function is called by:
   352 ;;		Interrupt level 1
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	intcodelo
   357   000018                     __pintcodelo:
   358                           	callstack 0
   359   000018                     _Lo_ISR:
   360                           	callstack 27
   361                           
   362                           ;incstack = 0
   363   000018  8010               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   364   00001A  CFE0 F00D          	movff	bsr,??_Lo_ISR
   365   00001E  C00D  FFE0         	movff	??_Lo_ISR,bsr
   366   000022  9010               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   367   000024  0010               	retfie	
   368   000026                     __end_of_Lo_ISR:
   369                           	callstack 0
   370                           
   371 ;; *************** function _H_ISR *****************
   372 ;; Defined at:
   373 ;;		line 10 in file "Main.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;  Lvalue          2   10[COMRAM] int 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   387 ;;      Params:         0       0       0       0       0       0       0
   388 ;;      Locals:         2       0       0       0       0       0       0
   389 ;;      Temps:          2       0       0       0       0       0       0
   390 ;;      Totals:         4       0       0       0       0       0       0
   391 ;;Total ram usage:        4 bytes
   392 ;; Hardware stack levels used: 1
   393 ;; Hardware stack levels required when called: 1
   394 ;; This function calls:
   395 ;;		_Mode_1_Setting
   396 ;;		_Mode_2_Setting
   397 ;;		_Mode_3_Setting
   398 ;;		___awdiv
   399 ;;		i2_System_Init
   400 ;; This function is called by:
   401 ;;		Interrupt level 2
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           	psect	intcode
   406   000008                     __pintcode:
   407                           	callstack 0
   408   000008                     _H_ISR:
   409                           	callstack 27
   410                           
   411                           ;incstack = 0
   412   000008  8210               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   413   00000A  ED01  F003         	call	int_func,f	;refresh shadow registers
   414                           
   415                           	psect	intcode_body
   416   000602                     __pintcode_body:
   417                           	callstack 27
   418   000602                     int_func:
   419                           	callstack 27
   420   000602  0006               	pop		; remove dummy address from shadow register refresh
   421   000604                     
   422                           ;Main.c: 11:     if (INTCONbits.INT0IF == 1){
   423   000604  A2F2               	btfss	242,1,c	;volatile
   424   000606  EF07  F003         	goto	i2u17_41
   425   00060A  EF09  F003         	goto	i2u17_40
   426   00060E                     i2u17_41:
   427   00060E  EF46  F003         	goto	i2l23
   428   000612                     i2u17_40:
   429   000612                     
   430                           ;Main.c: 12:         State = (State + 1) % 4;
   431   000612  0E01               	movlw	1
   432   000614  240E               	addwf	_State^0,w,c
   433   000616  6E09               	movwf	??_H_ISR^0,c
   434   000618  0E00               	movlw	0
   435   00061A  200F               	addwfc	(_State+1)^0,w,c
   436   00061C  6E0A               	movwf	(??_H_ISR+1)^0,c
   437   00061E  0E03               	movlw	3
   438   000620  1409               	andwf	??_H_ISR^0,w,c
   439   000622  6E0E               	movwf	_State^0,c
   440   000624  6A0F               	clrf	(_State+1)^0,c
   441                           
   442                           ;Main.c: 13:         switch(State){
   443   000626  EF29  F003         	goto	i2l978
   444   00062A                     i2l966:
   445                           
   446                           ;Main.c: 15:                 Mode_1_Setting();
   447   00062A  EC3D  F004         	call	_Mode_1_Setting	;wreg free
   448                           
   449                           ;Main.c: 16:                 break;
   450   00062E  EF43  F003         	goto	i2l26
   451   000632                     i2l968:
   452                           
   453                           ;Main.c: 18:                 Mode_2_Setting();
   454   000632  EC37  F004         	call	_Mode_2_Setting	;wreg free
   455   000636                     
   456                           ;Main.c: 19:                 LATC = 0b0001;
   457   000636  0E01               	movlw	1
   458   000638  6E8B               	movwf	139,c	;volatile
   459                           
   460                           ;Main.c: 20:                 break;
   461   00063A  EF43  F003         	goto	i2l26
   462   00063E                     i2l972:
   463                           
   464                           ;Main.c: 22:                 Mode_3_Setting();
   465   00063E  EC41  F004         	call	_Mode_3_Setting	;wreg free
   466   000642                     
   467                           ;Main.c: 23:                 LATC = 0b0011;
   468   000642  0E03               	movlw	3
   469   000644  6E8B               	movwf	139,c	;volatile
   470                           
   471                           ;Main.c: 24:                 break;
   472   000646  EF43  F003         	goto	i2l26
   473   00064A                     i2l976:
   474                           
   475                           ;Main.c: 26:                 System_Init();
   476   00064A  ECFD  F003         	call	i2_System_Init	;wreg free
   477                           
   478                           ;Main.c: 27:         }
   479   00064E  EF43  F003         	goto	i2l26
   480   000652                     i2l978:
   481   000652  C00E  F009         	movff	_State,??_H_ISR
   482   000656  C00F  F00A         	movff	_State+1,??_H_ISR+1
   483                           
   484                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   485                           ; Switch size 1, requested type "simple"
   486                           ; Number of cases is 1, Range of values is 0 to 0
   487                           ; switch strategies available:
   488                           ; Name         Instructions Cycles
   489                           ; simple_byte            4     3 (average)
   490                           ;	Chosen strategy is simple_byte
   491   00065A  500A               	movf	(??_H_ISR+1)^0,w,c
   492   00065C  0A00               	xorlw	0	; case 0
   493   00065E  B4D8               	btfsc	status,2,c
   494   000660  EF34  F003         	goto	i2l1000
   495   000664  EF25  F003         	goto	i2l976
   496   000668                     i2l1000:
   497                           
   498                           ; Switch size 1, requested type "simple"
   499                           ; Number of cases is 3, Range of values is 1 to 3
   500                           ; switch strategies available:
   501                           ; Name         Instructions Cycles
   502                           ; simple_byte           10     6 (average)
   503                           ;	Chosen strategy is simple_byte
   504   000668  5009               	movf	??_H_ISR^0,w,c
   505   00066A  0A01               	xorlw	1	; case 1
   506   00066C  B4D8               	btfsc	status,2,c
   507   00066E  EF15  F003         	goto	i2l966
   508   000672  0A03               	xorlw	3	; case 2
   509   000674  B4D8               	btfsc	status,2,c
   510   000676  EF19  F003         	goto	i2l968
   511   00067A  0A01               	xorlw	1	; case 3
   512   00067C  B4D8               	btfsc	status,2,c
   513   00067E  EF1F  F003         	goto	i2l972
   514   000682  EF25  F003         	goto	i2l976
   515   000686                     i2l26:
   516                           
   517                           ;Main.c: 28:         INTCONbits.INT0IF = 0;
   518   000686  92F2               	bcf	242,1,c	;volatile
   519                           
   520                           ;Main.c: 29:     }else if (INTCONbits.TMR0IF == 1){
   521   000688  EF72  F003         	goto	i2l35
   522   00068C                     i2l23:
   523   00068C  A4F2               	btfss	242,2,c	;volatile
   524   00068E  EF4B  F003         	goto	i2u18_41
   525   000692  EF4D  F003         	goto	i2u18_40
   526   000696                     i2u18_41:
   527   000696  EF50  F003         	goto	i2l31
   528   00069A                     i2u18_40:
   529   00069A                     
   530                           ;Main.c: 31:         INTCONbits.TMR0IF = 0;
   531   00069A  94F2               	bcf	242,2,c	;volatile
   532                           
   533                           ;Main.c: 32:     }else if (PIR1bits.ADIF == 1){
   534   00069C  EF72  F003         	goto	i2l35
   535   0006A0                     i2l31:
   536   0006A0  AC9E               	btfss	158,6,c	;volatile
   537   0006A2  EF55  F003         	goto	i2u19_41
   538   0006A6  EF57  F003         	goto	i2u19_40
   539   0006AA                     i2u19_41:
   540   0006AA  EF72  F003         	goto	i2l30
   541   0006AE                     i2u19_40:
   542   0006AE                     
   543                           ;Main.c: 33:         if (State == 1){
   544   0006AE  040E               	decf	_State^0,w,c
   545   0006B0  100F               	iorwf	(_State+1)^0,w,c
   546   0006B2  A4D8               	btfss	status,2,c
   547   0006B4  EF5E  F003         	goto	i2u20_41
   548   0006B8  EF60  F003         	goto	i2u20_40
   549   0006BC                     i2u20_41:
   550   0006BC  EF6F  F003         	goto	i2l988
   551   0006C0                     i2u20_40:
   552   0006C0                     
   553                           ;Main.c: 34:             int Lvalue = ADRESL;
   554   0006C0  CFC3 F00B          	movff	4035,H_ISR@Lvalue	;volatile
   555   0006C4  6A0C               	clrf	(H_ISR@Lvalue+1)^0,c
   556   0006C6                     
   557                           ;Main.c: 35:             LATC = Lvalue/4;
   558   0006C6  C00B  F001         	movff	H_ISR@Lvalue,___awdiv@dividend
   559   0006CA  C00C  F002         	movff	H_ISR@Lvalue+1,___awdiv@dividend+1
   560   0006CE  0E00               	movlw	0
   561   0006D0  6E04               	movwf	(___awdiv@divisor+1)^0,c
   562   0006D2  0E04               	movlw	4
   563   0006D4  6E03               	movwf	___awdiv@divisor^0,c
   564   0006D6  EC74  F003         	call	___awdiv	;wreg free
   565   0006DA  5001               	movf	?___awdiv^0,w,c
   566   0006DC  6E8B               	movwf	139,c	;volatile
   567   0006DE                     i2l988:
   568                           
   569                           ;Main.c: 37:         PIR1bits.ADIF = 0;
   570   0006DE  9C9E               	bcf	158,6,c	;volatile
   571   0006E0  EF72  F003         	goto	i2l35
   572   0006E4                     i2l30:
   573   0006E4                     i2l35:
   574   0006E4  9210               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   575   0006E6  0011               	retfie		f
   576   0006E8                     __end_of_H_ISR:
   577                           	callstack 0
   578                           
   579 ;; *************** function i2_System_Init *****************
   580 ;; Defined at:
   581 ;;		line 13 in file "Setting.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   595 ;;      Params:         0       0       0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels used: 1
   601 ;; This function calls:
   602 ;;		Nothing
   603 ;; This function is called by:
   604 ;;		_H_ISR
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           	psect	text4
   609   0007FA                     __ptext4:
   610                           	callstack 0
   611   0007FA                     i2_System_Init:
   612                           	callstack 27
   613   0007FA                     
   614                           ;Setting.c: 14:     ADCON1bits.PCFG = 0b1101;
   615   0007FA  50D3               	movf	211,w,c	;volatile
   616   0007FC  0B8F               	andlw	-113
   617   0007FE  0940               	iorlw	64
   618   000800  6ED3               	movwf	211,c	;volatile
   619                           
   620                           ;Setting.c: 15:     ADCON1bits.VCFG0 = 0;
   621   000802  0E03               	movlw	3
   622   000804  6E92               	movwf	146,c	;volatile
   623                           
   624                           ;Setting.c: 16:     ADCON1bits.VCFG1 = 0;
   625   000806  0E01               	movlw	1
   626   000808  6E93               	movwf	147,c	;volatile
   627                           
   628                           ;Setting.c: 17:     ADCON2bits.ADFM = 0;
   629   00080A  0E00               	movlw	0
   630   00080C  6E94               	movwf	148,c	;volatile
   631                           
   632                           ;Setting.c: 18:     ADCON2bits.ADCS = 0b000;
   633   00080E  0E00               	movlw	0
   634   000810  6E8B               	movwf	139,c	;volatile
   635   000812                     
   636                           ;Setting.c: 20:     ADCON0bits.ADON = 1;
   637   000812  9ED0               	bcf	208,7,c	;volatile
   638   000814                     
   639                           ;Setting.c: 21: 
   640   000814  8C9D               	bsf	157,6,c	;volatile
   641   000816                     
   642                           ;Setting.c: 22:     INTCONbits.TMR0IE = 1;
   643   000816  9C9E               	bcf	158,6,c	;volatile
   644   000818                     
   645                           ;Setting.c: 23:     INTCONbits.TMR0IF = 0;
   646   000818  92F2               	bcf	242,1,c	;volatile
   647   00081A                     
   648                           ;Setting.c: 24:     INTCON2bits.TMR0IP = 1;
   649   00081A  8CF2               	bsf	242,6,c	;volatile
   650   00081C                     
   651                           ;Setting.c: 25:     T0CONbits.T08BIT = 0;
   652   00081C  8EF2               	bsf	242,7,c	;volatile
   653                           
   654                           ;Setting.c: 27: }
   655   00081E  50C1               	movf	193,w,c	;volatile
   656   000820  0BF0               	andlw	-16
   657   000822  090D               	iorlw	13
   658   000824  6EC1               	movwf	193,c	;volatile
   659   000826                     
   660                           ;Setting.c: 28: 
   661   000826  98C1               	bcf	193,4,c	;volatile
   662   000828                     
   663                           ;Setting.c: 29: void Mode_1_Setting(void){
   664   000828  9AC1               	bcf	193,5,c	;volatile
   665   00082A                     
   666                           ;Setting.c: 30:     ADCON0bits.CHS = 0;
   667   00082A  9EC0               	bcf	192,7,c	;volatile
   668                           
   669                           ;Setting.c: 31:     ADCON0bits.GO = 1;
   670   00082C  0EF8               	movlw	-8
   671   00082E  16C0               	andwf	192,f,c	;volatile
   672                           
   673                           ;Setting.c: 32: }
   674   000830  50C0               	movf	192,w,c	;volatile
   675   000832  0BC7               	andlw	-57
   676   000834  0908               	iorlw	8
   677   000836  6EC0               	movwf	192,c	;volatile
   678   000838                     
   679                           ;Setting.c: 33: 
   680   000838  80C2               	bsf	194,0,c	;volatile
   681   00083A                     
   682                           ;Setting.c: 35:     ADCON0bits.CHS = 1;
   683   00083A  8AF2               	bsf	242,5,c	;volatile
   684   00083C                     
   685                           ;Setting.c: 36:     ADCON0bits.GO = 1;
   686   00083C  94F2               	bcf	242,2,c	;volatile
   687   00083E                     
   688                           ;Setting.c: 37: }
   689   00083E  84F1               	bsf	241,2,c	;volatile
   690   000840                     
   691                           ;Setting.c: 38: 
   692   000840  9CD5               	bcf	213,6,c	;volatile
   693                           
   694                           ;Setting.c: 39: void Mode_3_Setting(void){
   695   000842  0EF8               	movlw	-8
   696   000844  16D5               	andwf	213,f,c	;volatile
   697   000846  0012               	return		;funcret
   698   000848                     __end_ofi2_System_Init:
   699                           	callstack 0
   700                           
   701 ;; *************** function ___awdiv *****************
   702 ;; Defined at:
   703 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;  dividend        2    0[COMRAM] int 
   706 ;;  divisor         2    2[COMRAM] int 
   707 ;; Auto vars:     Size  Location     Type
   708 ;;  quotient        2    6[COMRAM] int 
   709 ;;  sign            1    5[COMRAM] unsigned char 
   710 ;;  counter         1    4[COMRAM] unsigned char 
   711 ;; Return value:  Size  Location     Type
   712 ;;                  2    0[COMRAM] int 
   713 ;; Registers used:
   714 ;;		wreg, status,2, status,0
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   720 ;;      Params:         4       0       0       0       0       0       0
   721 ;;      Locals:         4       0       0       0       0       0       0
   722 ;;      Temps:          0       0       0       0       0       0       0
   723 ;;      Totals:         8       0       0       0       0       0       0
   724 ;;Total ram usage:        8 bytes
   725 ;; Hardware stack levels used: 1
   726 ;; This function calls:
   727 ;;		Nothing
   728 ;; This function is called by:
   729 ;;		_H_ISR
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           	psect	text5
   734   0006E8                     __ptext5:
   735                           	callstack 0
   736   0006E8                     ___awdiv:
   737                           	callstack 27
   738   0006E8  0E00               	movlw	0
   739   0006EA  6E06               	movwf	___awdiv@sign^0,c
   740   0006EC  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   741   0006EE  EF7D  F003         	goto	i2u11_40
   742   0006F2  EF7B  F003         	goto	i2u11_41
   743   0006F6                     i2u11_41:
   744   0006F6  EF83  F003         	goto	i2l926
   745   0006FA                     i2u11_40:
   746   0006FA  6C03               	negf	___awdiv@divisor^0,c
   747   0006FC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   748   0006FE  B0D8               	btfsc	status,0,c
   749   000700  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   750   000702  0E01               	movlw	1
   751   000704  6E06               	movwf	___awdiv@sign^0,c
   752   000706                     i2l926:
   753   000706  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   754   000708  EF8A  F003         	goto	i2u12_40
   755   00070C  EF88  F003         	goto	i2u12_41
   756   000710                     i2u12_41:
   757   000710  EF90  F003         	goto	i2l932
   758   000714                     i2u12_40:
   759   000714  6C01               	negf	___awdiv@dividend^0,c
   760   000716  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   761   000718  B0D8               	btfsc	status,0,c
   762   00071A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   763   00071C  0E01               	movlw	1
   764   00071E  1A06               	xorwf	___awdiv@sign^0,f,c
   765   000720                     i2l932:
   766   000720  0E00               	movlw	0
   767   000722  6E08               	movwf	(___awdiv@quotient+1)^0,c
   768   000724  0E00               	movlw	0
   769   000726  6E07               	movwf	___awdiv@quotient^0,c
   770   000728  5003               	movf	___awdiv@divisor^0,w,c
   771   00072A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   772   00072C  B4D8               	btfsc	status,2,c
   773   00072E  EF9B  F003         	goto	i2u13_41
   774   000732  EF9D  F003         	goto	i2u13_40
   775   000736                     i2u13_41:
   776   000736  EFC5  F003         	goto	i2l954
   777   00073A                     i2u13_40:
   778   00073A  0E01               	movlw	1
   779   00073C  6E05               	movwf	___awdiv@counter^0,c
   780   00073E  EFA5  F003         	goto	i2l940
   781   000742                     i2l938:
   782   000742  90D8               	bcf	status,0,c
   783   000744  3603               	rlcf	___awdiv@divisor^0,f,c
   784   000746  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   785   000748  2A05               	incf	___awdiv@counter^0,f,c
   786   00074A                     i2l940:
   787   00074A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   788   00074C  EFAA  F003         	goto	i2u14_41
   789   000750  EFAC  F003         	goto	i2u14_40
   790   000754                     i2u14_41:
   791   000754  EFA1  F003         	goto	i2l938
   792   000758                     i2u14_40:
   793   000758                     i2l942:
   794   000758  90D8               	bcf	status,0,c
   795   00075A  3607               	rlcf	___awdiv@quotient^0,f,c
   796   00075C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   797   00075E  5003               	movf	___awdiv@divisor^0,w,c
   798   000760  5C01               	subwf	___awdiv@dividend^0,w,c
   799   000762  5004               	movf	(___awdiv@divisor+1)^0,w,c
   800   000764  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   801   000766  A0D8               	btfss	status,0,c
   802   000768  EFB8  F003         	goto	i2u15_41
   803   00076C  EFBA  F003         	goto	i2u15_40
   804   000770                     i2u15_41:
   805   000770  EFBF  F003         	goto	i2l950
   806   000774                     i2u15_40:
   807   000774  5003               	movf	___awdiv@divisor^0,w,c
   808   000776  5E01               	subwf	___awdiv@dividend^0,f,c
   809   000778  5004               	movf	(___awdiv@divisor+1)^0,w,c
   810   00077A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   811   00077C  8007               	bsf	___awdiv@quotient^0,0,c
   812   00077E                     i2l950:
   813   00077E  90D8               	bcf	status,0,c
   814   000780  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   815   000782  3203               	rrcf	___awdiv@divisor^0,f,c
   816   000784  2E05               	decfsz	___awdiv@counter^0,f,c
   817   000786  EFAC  F003         	goto	i2l942
   818   00078A                     i2l954:
   819   00078A  5006               	movf	___awdiv@sign^0,w,c
   820   00078C  B4D8               	btfsc	status,2,c
   821   00078E  EFCB  F003         	goto	i2u16_41
   822   000792  EFCD  F003         	goto	i2u16_40
   823   000796                     i2u16_41:
   824   000796  EFD1  F003         	goto	i2l958
   825   00079A                     i2u16_40:
   826   00079A  6C07               	negf	___awdiv@quotient^0,c
   827   00079C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   828   00079E  B0D8               	btfsc	status,0,c
   829   0007A0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   830   0007A2                     i2l958:
   831   0007A2  C007  F001         	movff	___awdiv@quotient,?___awdiv
   832   0007A6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   833   0007AA  0012               	return		;funcret
   834   0007AC                     __end_of___awdiv:
   835                           	callstack 0
   836                           
   837 ;; *************** function _Mode_3_Setting *****************
   838 ;; Defined at:
   839 ;;		line 52 in file "Setting.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		None
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   853 ;;      Params:         0       0       0       0       0       0       0
   854 ;;      Locals:         0       0       0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0       0       0
   856 ;;      Totals:         0       0       0       0       0       0       0
   857 ;;Total ram usage:        0 bytes
   858 ;; Hardware stack levels used: 1
   859 ;; This function calls:
   860 ;;		Nothing
   861 ;; This function is called by:
   862 ;;		_H_ISR
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           	psect	text6
   867   000882                     __ptext6:
   868                           	callstack 0
   869   000882                     _Mode_3_Setting:
   870                           	callstack 27
   871   000882  0012               	return		;funcret
   872   000884                     __end_of_Mode_3_Setting:
   873                           	callstack 0
   874                           
   875 ;; *************** function _Mode_2_Setting *****************
   876 ;; Defined at:
   877 ;;		line 47 in file "Setting.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, status,2
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   891 ;;      Params:         0       0       0       0       0       0       0
   892 ;;      Locals:         0       0       0       0       0       0       0
   893 ;;      Temps:          0       0       0       0       0       0       0
   894 ;;      Totals:         0       0       0       0       0       0       0
   895 ;;Total ram usage:        0 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		_H_ISR
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text7
   905   00086E                     __ptext7:
   906                           	callstack 0
   907   00086E                     _Mode_2_Setting:
   908                           	callstack 27
   909   00086E  50C2               	movf	194,w,c	;volatile
   910   000870  0BC3               	andlw	-61
   911   000872  0904               	iorlw	4
   912   000874  6EC2               	movwf	194,c	;volatile
   913   000876  82C2               	bsf	194,1,c	;volatile
   914   000878  0012               	return		;funcret
   915   00087A                     __end_of_Mode_2_Setting:
   916                           	callstack 0
   917                           
   918 ;; *************** function _Mode_1_Setting *****************
   919 ;; Defined at:
   920 ;;		line 42 in file "Setting.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, status,2
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   934 ;;      Params:         0       0       0       0       0       0       0
   935 ;;      Locals:         0       0       0       0       0       0       0
   936 ;;      Temps:          0       0       0       0       0       0       0
   937 ;;      Totals:         0       0       0       0       0       0       0
   938 ;;Total ram usage:        0 bytes
   939 ;; Hardware stack levels used: 1
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_H_ISR
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text8
   948   00087A                     __ptext8:
   949                           	callstack 0
   950   00087A                     _Mode_1_Setting:
   951                           	callstack 27
   952   00087A  0EC3               	movlw	-61
   953   00087C  16C2               	andwf	194,f,c	;volatile
   954   00087E  82C2               	bsf	194,1,c	;volatile
   955   000880  0012               	return		;funcret
   956   000882                     __end_of_Mode_1_Setting:
   957                           	callstack 0
   958                           
   959                           	psect	smallconst
   960   000600                     __psmallconst:
   961                           	callstack 0
   962   000600  00                 	db	0
   963   000601  00                 	db	0	; dummy byte at the end
   964   000000                     
   965                           	psect	rparam
   966   000000                     
   967                           	psect	temp
   968   000010                     btemp:
   969                           	callstack 0
   970   000010                     	ds	1
   971   000000                     int$flags	set	btemp
   972   000000                     wtemp8	set	btemp+1
   973   000000                     ttemp5	set	btemp+1
   974   000000                     ttemp6	set	btemp+4
   975   000000                     ttemp7	set	btemp+8
   976                           
   977                           	psect	idloc
   978                           
   979                           ;Config register IDLOC0 @ 0x200000
   980                           ;	unspecified, using default values
   981   200000                     	org	2097152
   982   200000  FF                 	db	255
   983                           
   984                           ;Config register IDLOC1 @ 0x200001
   985                           ;	unspecified, using default values
   986   200001                     	org	2097153
   987   200001  FF                 	db	255
   988                           
   989                           ;Config register IDLOC2 @ 0x200002
   990                           ;	unspecified, using default values
   991   200002                     	org	2097154
   992   200002  FF                 	db	255
   993                           
   994                           ;Config register IDLOC3 @ 0x200003
   995                           ;	unspecified, using default values
   996   200003                     	org	2097155
   997   200003  FF                 	db	255
   998                           
   999                           ;Config register IDLOC4 @ 0x200004
  1000                           ;	unspecified, using default values
  1001   200004                     	org	2097156
  1002   200004  FF                 	db	255
  1003                           
  1004                           ;Config register IDLOC5 @ 0x200005
  1005                           ;	unspecified, using default values
  1006   200005                     	org	2097157
  1007   200005  FF                 	db	255
  1008                           
  1009                           ;Config register IDLOC6 @ 0x200006
  1010                           ;	unspecified, using default values
  1011   200006                     	org	2097158
  1012   200006  FF                 	db	255
  1013                           
  1014                           ;Config register IDLOC7 @ 0x200007
  1015                           ;	unspecified, using default values
  1016   200007                     	org	2097159
  1017   200007  FF                 	db	255
  1018                           
  1019                           	psect	config
  1020                           
  1021                           ; Padding undefined space
  1022   300000                     	org	3145728
  1023   300000  FF                 	db	255
  1024                           
  1025                           ;Config register CONFIG1H @ 0x300001
  1026                           ;	Oscillator Selection bits
  1027                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1028                           ;	Fail-Safe Clock Monitor Enable bit
  1029                           ;	FCMEN = 0x0, unprogrammed default
  1030                           ;	Internal/External Oscillator Switchover bit
  1031                           ;	IESO = 0x0, unprogrammed default
  1032   300001                     	org	3145729
  1033   300001  08                 	db	8
  1034                           
  1035                           ;Config register CONFIG2L @ 0x300002
  1036                           ;	Power-up Timer Enable bit
  1037                           ;	PWRT = OFF, PWRT disabled
  1038                           ;	Brown-out Reset Enable bits
  1039                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
  1040                           ;	Brown Out Reset Voltage bits
  1041                           ;	BORV = 0x3, unprogrammed default
  1042   300002                     	org	3145730
  1043   300002  1B                 	db	27
  1044                           
  1045                           ;Config register CONFIG2H @ 0x300003
  1046                           ;	Watchdog Timer Enable bit
  1047                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1048                           ;	Watchdog Timer Postscale Select bits
  1049                           ;	WDTPS = 0xF, unprogrammed default
  1050   300003                     	org	3145731
  1051   300003  1E                 	db	30
  1052                           
  1053                           ; Padding undefined space
  1054   300004                     	org	3145732
  1055   300004  FF                 	db	255
  1056                           
  1057                           ;Config register CONFIG3H @ 0x300005
  1058                           ;	CCP2 MUX bit
  1059                           ;	CCP2MX = 0x1, unprogrammed default
  1060                           ;	PORTB A/D Enable bit
  1061                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1062                           ;	Low-Power Timer1 Oscillator Enable bit
  1063                           ;	LPT1OSC = 0x0, unprogrammed default
  1064                           ;	MCLR Pin Enable bit
  1065                           ;	MCLRE = 0x1, unprogrammed default
  1066   300005                     	org	3145733
  1067   300005  81                 	db	129
  1068                           
  1069                           ;Config register CONFIG4L @ 0x300006
  1070                           ;	Stack Full/Underflow Reset Enable bit
  1071                           ;	STVREN = 0x1, unprogrammed default
  1072                           ;	Single-Supply ICSP Enable bit
  1073                           ;	LVP = OFF, Single-Supply ICSP disabled
  1074                           ;	Extended Instruction Set Enable bit
  1075                           ;	XINST = 0x0, unprogrammed default
  1076                           ;	Background Debugger Enable bit
  1077                           ;	DEBUG = 0x1, unprogrammed default
  1078   300006                     	org	3145734
  1079   300006  81                 	db	129
  1080                           
  1081                           ; Padding undefined space
  1082   300007                     	org	3145735
  1083   300007  FF                 	db	255
  1084                           
  1085                           ;Config register CONFIG5L @ 0x300008
  1086                           ;	unspecified, using default values
  1087                           ;	Code Protection bit
  1088                           ;	CP0 = 0x1, unprogrammed default
  1089                           ;	Code Protection bit
  1090                           ;	CP1 = 0x1, unprogrammed default
  1091                           ;	Code Protection bit
  1092                           ;	CP2 = 0x1, unprogrammed default
  1093                           ;	Code Protection bit
  1094                           ;	CP3 = 0x1, unprogrammed default
  1095   300008                     	org	3145736
  1096   300008  0F                 	db	15
  1097                           
  1098                           ;Config register CONFIG5H @ 0x300009
  1099                           ;	Boot Block Code Protection bit
  1100                           ;	CPB = 0x1, unprogrammed default
  1101                           ;	Data EEPROM Code Protection bit
  1102                           ;	CPD = OFF, Data EEPROM not code-protected
  1103   300009                     	org	3145737
  1104   300009  C0                 	db	192
  1105                           
  1106                           ;Config register CONFIG6L @ 0x30000A
  1107                           ;	unspecified, using default values
  1108                           ;	Write Protection bit
  1109                           ;	WRT0 = 0x1, unprogrammed default
  1110                           ;	Write Protection bit
  1111                           ;	WRT1 = 0x1, unprogrammed default
  1112                           ;	Write Protection bit
  1113                           ;	WRT2 = 0x1, unprogrammed default
  1114                           ;	Write Protection bit
  1115                           ;	WRT3 = 0x1, unprogrammed default
  1116   30000A                     	org	3145738
  1117   30000A  0F                 	db	15
  1118                           
  1119                           ;Config register CONFIG6H @ 0x30000B
  1120                           ;	unspecified, using default values
  1121                           ;	Configuration Register Write Protection bit
  1122                           ;	WRTC = 0x1, unprogrammed default
  1123                           ;	Boot Block Write Protection bit
  1124                           ;	WRTB = 0x1, unprogrammed default
  1125                           ;	Data EEPROM Write Protection bit
  1126                           ;	WRTD = 0x1, unprogrammed default
  1127   30000B                     	org	3145739
  1128   30000B  E0                 	db	224
  1129                           
  1130                           ;Config register CONFIG7L @ 0x30000C
  1131                           ;	unspecified, using default values
  1132                           ;	Table Read Protection bit
  1133                           ;	EBTR0 = 0x1, unprogrammed default
  1134                           ;	Table Read Protection bit
  1135                           ;	EBTR1 = 0x1, unprogrammed default
  1136                           ;	Table Read Protection bit
  1137                           ;	EBTR2 = 0x1, unprogrammed default
  1138                           ;	Table Read Protection bit
  1139                           ;	EBTR3 = 0x1, unprogrammed default
  1140   30000C                     	org	3145740
  1141   30000C  0F                 	db	15
  1142                           
  1143                           ;Config register CONFIG7H @ 0x30000D
  1144                           ;	unspecified, using default values
  1145                           ;	Boot Block Table Read Protection bit
  1146                           ;	EBTRB = 0x1, unprogrammed default
  1147   30000D                     	org	3145741
  1148   30000D  40                 	db	64
  1149                           tosu	equ	0xFFF
  1150                           tosh	equ	0xFFE
  1151                           tosl	equ	0xFFD
  1152                           stkptr	equ	0xFFC
  1153                           pclatu	equ	0xFFB
  1154                           pclath	equ	0xFFA
  1155                           pcl	equ	0xFF9
  1156                           tblptru	equ	0xFF8
  1157                           tblptrh	equ	0xFF7
  1158                           tblptrl	equ	0xFF6
  1159                           tablat	equ	0xFF5
  1160                           prodh	equ	0xFF4
  1161                           prodl	equ	0xFF3
  1162                           indf0	equ	0xFEF
  1163                           postinc0	equ	0xFEE
  1164                           postdec0	equ	0xFED
  1165                           preinc0	equ	0xFEC
  1166                           plusw0	equ	0xFEB
  1167                           fsr0h	equ	0xFEA
  1168                           fsr0l	equ	0xFE9
  1169                           wreg	equ	0xFE8
  1170                           indf1	equ	0xFE7
  1171                           postinc1	equ	0xFE6
  1172                           postdec1	equ	0xFE5
  1173                           preinc1	equ	0xFE4
  1174                           plusw1	equ	0xFE3
  1175                           fsr1h	equ	0xFE2
  1176                           fsr1l	equ	0xFE1
  1177                           bsr	equ	0xFE0
  1178                           indf2	equ	0xFDF
  1179                           postinc2	equ	0xFDE
  1180                           postdec2	equ	0xFDD
  1181                           preinc2	equ	0xFDC
  1182                           plusw2	equ	0xFDB
  1183                           fsr2h	equ	0xFDA
  1184                           fsr2l	equ	0xFD9
  1185                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     13      15
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    None.

Critical Paths under _H_ISR in COMRAM

    _H_ISR->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _System_Init
 ---------------------------------------------------------------------------------
 (1) _System_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Lo_ISR                                               1     1      0       0
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _H_ISR                                                4     4      0     475
                                              8 COMRAM     4     4      0
                     _Mode_1_Setting
                     _Mode_2_Setting
                     _Mode_3_Setting
                            ___awdiv
                      i2_System_Init
 ---------------------------------------------------------------------------------
 (4) i2_System_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _Mode_3_Setting                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Mode_2_Setting                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Mode_1_Setting                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _System_Init

 _Lo_ISR (ROOT)

 _H_ISR (ROOT)
   _Mode_1_Setting
   _Mode_2_Setting
   _Mode_3_Setting
   ___awdiv
   i2_System_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      D       F       1       11.9%
BITBIGSFRlhhll      21      0       0      21        0.0%
BITBIGSFRlhhhhh     1B      0       0      17        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRlhhhll      C      0       0      20        0.0%
BITBIGSFRll          B      0       0      24        0.0%
BITBIGSFRlhlh        8      0       0      22        0.0%
BITBIGSFRlhll        6      0       0      23        0.0%
BITBIGSFRlhhhlh      2      0       0      19        0.0%
BITBIGSFRlhhhhl      1      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       F      25        0.0%
DATA                 0      0       F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Jan 01 23:13:43 2024

                     l45 0854                       l46 0854                       l79 07F8  
           ___awdiv@sign 0006                       bsr 0FE0                      l800 07F2  
                    l910 0848                      l912 084C                      l780 07CA  
                    l772 07AC                      l790 07DC                      l782 07CC  
                    l774 07C4                      l792 07EA                      l784 07CE  
                    l776 07C6                      l794 07EC                      l786 07D8  
                    l778 07C8                      l796 07EE                      l788 07DA  
                    l798 07F0                     _LATC 0F8B                     i1l40 001E  
                   i2l30 06E4                     i2l31 06A0                     i2l23 068C  
                   i2l26 0686                     i2l35 06E4                     i2l82 0880  
                   i2l85 0878                     i2l79 0846                     i2l88 0882  
                   _main 0848                     btemp 0010                     start 0026  
           ___param_bank 0000                    ?_main 0001          __end_of___awdiv 07AC  
        ___awdiv@divisor 0003                    i2l322 07AA                    i2l920 06EC  
                  i2l770 0876                    i2l930 071C                    i2l922 06FA  
                  i2l850 0814                    i2l764 087A                    i2l940 074A  
                  i2l932 0720                    i2l924 0702                    i2l860 0826  
                  i2l852 0816                    i2l766 087E                    i2l950 077E  
                  i2l942 0758                    i2l934 0728                    i2l926 0706  
                  i2l918 06E8                    i2l870 083C                    i2l862 0828  
                  i2l854 0818                    i2l846 07FA                    i2l768 086E  
                  i2l952 0784                    i2l944 075E                    i2l936 073A  
                  i2l928 0714                    i2l872 083E                    i2l864 082A  
                  i2l856 081A                    i2l848 0812                    i2l946 0774  
                  i2l938 0742                    i2l954 078A                    i2l874 0840  
                  i2l866 0838                    i2l858 081C                    i2l970 0636  
                  i2l962 0604                    i2l956 079A                    i2l948 077C  
                  i2l868 083A                    i2l980 069A                    i2l972 063E  
                  i2l964 0612          ___awdiv@counter 0005                    i2l958 07A2  
                  i2l982 06AE                    i2l974 0642                    i2l966 062A  
                  i2l984 06C0                    i2l976 064A                    i2l968 0632  
                  i2l986 06C6                    i2l978 0652                    i2l988 06DE  
                  _H_ISR 0008                    _TRISA 0F92                    _TRISB 0F93  
                  _TRISC 0F94                    _State 000E                    ttemp5 0011  
                  ttemp6 0014                    ttemp7 0018                    status 0FD8  
                  wtemp8 0011          __initialization 085C             __end_of_main 085C  
                 ??_main 000E            __activetblptr 0002                   ?_H_ISR 0001  
                 _ADRESL 0FC3         ___awdiv@dividend 0001                   i2l1000 0668  
         _Mode_1_Setting 087A           _Mode_2_Setting 086E           _Mode_3_Setting 0882  
                 _Lo_ISR 0018            i2_System_Init 07FA                ??___awdiv 0005  
       ___awdiv@quotient 0007                   isa$std 0001             __mediumconst 0000  
                 tblptru 0FF8   __end_of_Mode_1_Setting 0882   __end_of_Mode_2_Setting 087A  
 __end_of_Mode_3_Setting 0884               __accesstop 0080  __end_of__initialization 0860  
          ___rparam_used 0001           ?i2_System_Init 0001            __end_of_H_ISR 06E8  
         __pcstackCOMRAM 0001                  ??_H_ISR 0009          ?_Mode_1_Setting 0001  
        ?_Mode_2_Setting 0001          ?_Mode_3_Setting 0001                  ?_Lo_ISR 0001  
            H_ISR@Lvalue 000B                  i2u11_40 06FA                  i2u11_41 06F6  
                i2u12_40 0714                  i2u20_40 06C0                  i2u12_41 0710  
                i2u20_41 06BC                  i2u13_40 073A                  i2u13_41 0736  
                i2u14_40 0758                  i2u14_41 0754                  i2u15_40 0774  
                i2u15_41 0770                  i2u16_40 079A                  i2u16_41 0796  
                i2u17_40 0612                  i2u17_41 060E                  i2u18_40 069A  
                i2u18_41 0696                  i2u19_40 06AE                  i2u19_41 06AA  
        ??i2_System_Init 0001            ??_System_Init 000E                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 06E8             __psmallconst 0600  
                __pcinit 085C                  __ramtop 0600                  __ptext0 0848  
                __ptext1 07AC                  __ptext4 07FA                  __ptext5 06E8  
                __ptext6 0882                  __ptext7 086E                  __ptext8 087A  
              _T0CONbits 0FD5           __pintcode_body 0602     end_of_initialization 0860  
          __Lmediumconst 0000                  int_func 0602      __end_of_System_Init 07FA  
         __end_of_Lo_ISR 0026         ??_Mode_1_Setting 0001      start_initialization 085C  
       ??_Mode_2_Setting 0001         ??_Mode_3_Setting 0001              _System_Init 07AC  
               ??_Lo_ISR 000D              __pbssCOMRAM 000E                __pintcode 0008  
               ?___awdiv 0001              __pintcodelo 0018              __smallconst 0600  
  __end_ofi2_System_Init 0848                 _PIE1bits 0F9D                 _PIR1bits 0F9E  
               _RCONbits 0FD0               _ADCON0bits 0FC2               _ADCON1bits 0FC1  
             _ADCON2bits 0FC0              _INTCON2bits 0FF1                 __Hrparam 0000  
               __Lrparam 0000             ?_System_Init 0001                 isa$xinst 0000  
               int$flags 0010               _INTCONbits 0FF2                 intlevel1 0000  
               intlevel2 0000               _OSCCONbits 0FD3  
